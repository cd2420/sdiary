[{"/Users/imdaegeun/heavenMokdal/sdiary/src/index.js":"1","/Users/imdaegeun/heavenMokdal/sdiary/src/reportWebVitals.js":"2","/Users/imdaegeun/heavenMokdal/sdiary/src/components/App.js":"3","/Users/imdaegeun/heavenMokdal/sdiary/src/components/PhoneAuthProvide.js":"4","/Users/imdaegeun/heavenMokdal/sdiary/src/components/Navigation.js":"5","/Users/imdaegeun/heavenMokdal/sdiary/src/fbase.js":"6","/Users/imdaegeun/heavenMokdal/sdiary/src/components/Router.js":"7","/Users/imdaegeun/heavenMokdal/sdiary/src/components/DetailDiary.js":"8","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Check.js":"9","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Auth.js":"10","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Profile.js":"11","/Users/imdaegeun/heavenMokdal/sdiary/src/router/EditProfile.js":"12","/Users/imdaegeun/heavenMokdal/sdiary/src/components/DiaryFactory.js":"13","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Diary.js":"14","/Users/imdaegeun/heavenMokdal/sdiary/src/components/InputDto.js":"15","/Users/imdaegeun/heavenMokdal/sdiary/src/config/common.js":"16","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Input.js":"17","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Statistics.js":"18","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Update.js":"19"},{"size":489,"mtime":1615636652982,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1615636652982,"results":"22","hashOfConfig":"21"},{"size":1898,"mtime":1616185697803,"results":"23","hashOfConfig":"21"},{"size":10128,"mtime":1616184025615,"results":"24","hashOfConfig":"21"},{"size":5256,"mtime":1616186823078,"results":"25","hashOfConfig":"21"},{"size":587,"mtime":1615636652982,"results":"26","hashOfConfig":"21"},{"size":2658,"mtime":1616183806722,"results":"27","hashOfConfig":"21"},{"size":2892,"mtime":1615993420650,"results":"28","hashOfConfig":"21"},{"size":500,"mtime":1616186329862,"results":"29","hashOfConfig":"21"},{"size":184,"mtime":1615636652982,"results":"30","hashOfConfig":"31"},{"size":378,"mtime":1616183740031,"results":"32","hashOfConfig":"21"},{"size":4472,"mtime":1616184700565,"results":"33","hashOfConfig":"21"},{"size":2091,"mtime":1615636652981,"results":"34","hashOfConfig":"31"},{"size":645,"mtime":1615636652982,"results":"35","hashOfConfig":"31"},{"size":4579,"mtime":1616186353526,"results":"36","hashOfConfig":"21"},{"size":5165,"mtime":1616183675271,"results":"37","hashOfConfig":"21"},{"size":3489,"mtime":1616188230815,"results":"38","hashOfConfig":"21"},{"size":10478,"mtime":1616185726704,"results":"39","hashOfConfig":"21"},{"size":3762,"mtime":1616188513510,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"4a44nd",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"10b9v05",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/imdaegeun/heavenMokdal/sdiary/src/index.js",[],["91","92"],"/Users/imdaegeun/heavenMokdal/sdiary/src/reportWebVitals.js",[],"/Users/imdaegeun/heavenMokdal/sdiary/src/components/App.js",[],"/Users/imdaegeun/heavenMokdal/sdiary/src/components/PhoneAuthProvide.js",["93","94","95","96"],"import React,{useEffect} from \"react\";\nimport * as firebaseui from 'firebaseui'\nimport 'firebaseui/dist/firebaseui.css'\nimport { firebaseInstance, serviceAuth, dbService } from \"fbase\";\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nconst PhoneAuthProvide = ({refreshUser}) => {\n\n    function onSignInSubmit(e) {\n        e.preventDefault();\n        if (isPhoneNumberValid()) {\n          window.signingIn = true;\n          updateSignInButtonUI();\n          var phoneNumber = getPhoneNumberFromUserInput();\n          var appVerifier = window.recaptchaVerifier;\n          serviceAuth.signInWithPhoneNumber(phoneNumber, appVerifier)\n              .then(function (confirmationResult) {\n                // SMS sent. Prompt user to type the code from the message, then sign the\n                // user in with confirmationResult.confirm(code).\n                \n                window.confirmationResult = confirmationResult;\n                window.signingIn = false;\n                updateSignInButtonUI();\n                updateVerificationCodeFormUI();\n                updateVerifyCodeButtonUI();\n                updateSignInFormUI();\n              }).catch(function (error) {\n                // Error; SMS not sent\n                console.error('Error during signInWithPhoneNumber', error);\n                window.alert('Error during signInWithPhoneNumber:\\n\\n'\n                    + error.code + '\\n\\n' + error.message);\n                window.signingIn = false;\n                updateSignInFormUI();\n                updateSignInButtonUI();\n              });\n        }\n      }\n\n      const addUser = async (user) => {\n        const users = await dbService.collection(\"users\").where(\"creatorId\", \"==\", user.uid).get();\n        const check = users.docs.length;\n        if (check === 0) {\n          getCheckUser(user);\n        }\n      }\n      \n      const getCheckUser = async(user) => {\n        await dbService.collection(\"users\").add({\n          creatorId : user.uid,\n          phoneNumber : user.phoneNumber,\n          username : null,\n          adminSign : false,\n          sector : null,\n          team : null\n        });\n      }\n    \n      /**\n       * Function called when clicking the \"Verify Code\" button.\n       */\n      function onVerifyCodeSubmit(e) {\n        e.preventDefault();\n        if (!!getCodeFromUserInput()) {\n          window.verifyingCode = true;\n          updateVerifyCodeButtonUI();\n          var code = getCodeFromUserInput();\n          window.confirmationResult.confirm(code).then((result) => {\n            // User signed in successfully.\n            var user = result.user;\n\n            addUser(user);\n            window.verifyingCode = false;\n            window.confirmationResult = null;\n            updateVerificationCodeFormUI();\n            refreshUser();\n          }).catch(function (error) {\n            // User couldn't sign in (bad verification code?)\n            console.error('Error while checking the verification code', error);\n            window.alert('Error while checking the verification code:\\n\\n'\n                + error.code + '\\n\\n' + error.message);\n            window.verifyingCode = false;\n            updateSignInButtonUI();\n            updateVerifyCodeButtonUI();\n          });\n        }\n      }\n    \n      /**\n       * Cancels the verification code input.\n       */\n      function cancelVerification(e) {\n        e.preventDefault();\n        window.confirmationResult = null;\n        updateVerificationCodeFormUI();\n        updateSignInFormUI();\n      }\n    \n      /**\n       * Signs out the user when the sign-out button is clicked.\n       */\n      function onSignOutClick() {\n        serviceAuth.signOut();\n      }\n    \n      /**\n       * Reads the verification code from the user input.\n       */\n      function getCodeFromUserInput() {\n        return document.getElementById('verification-code').value;\n      }\n    \n      /**\n       * Reads the phone number from the user input.\n       */\n      function getPhoneNumberFromUserInput() {\n        return document.getElementById('phone-number').value;\n      }\n\n      /**\n       * Returns true if the phone number is valid.\n       */\n      function isPhoneNumberValid() {\n        var pattern = /^\\+[0-9\\s\\-\\(\\)]+$/;\n        var phoneNumber = getPhoneNumberFromUserInput();\n        return phoneNumber.search(pattern) !== -1;\n      }\n    \n      /**\n       * Updates the Sign-in button state depending on ReCAptcha and form values state.\n       */\n      function updateSignInButtonUI() {\n        document.getElementById('sign-in-button').disabled =\n           !isPhoneNumberValid()\n            || !!window.signingIn;\n      }\n    \n      /**\n       * Updates the Verify-code button state depending on form values state.\n       */\n      function updateVerifyCodeButtonUI() {\n        document.getElementById('verify-code-button').disabled =\n            !!window.verifyingCode\n            || !getCodeFromUserInput();\n      }\n    \n      /**\n       * Updates the state of the Sign-in form.\n       */\n      function updateSignInFormUI() {\n        if (serviceAuth.currentUser || window.confirmationResult) {\n          document.getElementById('sign-in-form').style.display = 'none';\n        } else {\n          document.getElementById('sign-in-form').style.display = 'block';\n        }\n      }\n    \n      /**\n       * Updates the state of the Verify code form.\n       */\n      function updateVerificationCodeFormUI() {\n        if (!serviceAuth.currentUser && window.confirmationResult) {\n          document.getElementById('verification-code-form').style.display = 'block';\n        } else {\n          document.getElementById('verification-code-form').style.display = 'none';\n        }\n      }\n    \n      /**\n       * Updates the state of the Sign out button.\n       */\n      function updateSignOutButtonUI() {\n        if (serviceAuth.currentUser) {\n          document.getElementById('sign-out-button').style.display = 'block';\n        } else {\n          document.getElementById('sign-out-button').style.display = 'none';\n        }\n      }\n    \n     \n    \n\n    useEffect(\n     () => {\n        updateSignInButtonUI();\n        updateSignInFormUI();\n        updateSignOutButtonUI();\n        updateVerificationCodeFormUI();\n\n        document.getElementById('sign-in-form').addEventListener('submit', onSignInSubmit);\n        document.getElementById('sign-out-button').addEventListener('click', onSignOutClick);\n        document.getElementById('phone-number').addEventListener('keyup', updateSignInButtonUI);\n        document.getElementById('phone-number').addEventListener('change', updateSignInButtonUI);\n        document.getElementById('verification-code').addEventListener('keyup', updateVerifyCodeButtonUI);\n        document.getElementById('verification-code').addEventListener('change', updateVerifyCodeButtonUI);\n        document.getElementById('verification-code-form').addEventListener('submit', onVerifyCodeSubmit);\n        document.getElementById('cancel-verify-code-button').addEventListener('click', cancelVerification);\n\n        window.recaptchaVerifier = new firebaseInstance.RecaptchaVerifier('recaptcha-container', {\n            'size': 'invisible',\n            'callback': function(response) {\n           \n              updateSignInButtonUI();\n            },\n            'expired-callback': function() {\n          \n              updateSignInButtonUI();\n            }\n          });\n\n          window.recaptchaVerifier.render().then(function(widgetId) {\n            window.recaptchaWidgetId = widgetId;\n          });\n\n     }, []\n    );\n    \n    const useStyles = makeStyles((theme) => ({\n      paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n    }));\n    const classes = useStyles();\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          휴대폰 인증\n        </Typography>\n        <form className={classes.form} id=\"sign-in-form\" action=\"#\">\n          <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n            <input className=\"mdl-textfield__input\" type=\"text\" placeholder=\"(ex) +82 01012345678\" pattern=\"\\+[0-9\\s\\-\\(\\)]+\" id=\"phone-number\" />\n            <span className=\"mdl-textfield__error\">Input is not an international phone number!</span>\n          </div>\n          <div id=\"recaptcha-container\"></div>\n          <input type=\"submit\" disabled className=\"mdl-button mdl-js-button mdl-button--raised\" id=\"sign-in-button\" value=\"Sign-in\"/>\n        </form>\n      \n        <button className=\"mdl-button mdl-js-button mdl-button--raised\" id=\"sign-out-button\">Sign-out</button>\n\n        <form id=\"verification-code-form\" action=\"#\">\n          <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n             <input className=\"mdl-textfield__input\" type=\"text\" id=\"verification-code\" placeholder=\"코드입력\" />\n                    {/* <input class=\"mdl-textfield__input\" type=\"text\" placeholder=\"이름\" id=\"user-name\" value={userName} onChange={changeName} /> */}\n          </div>\n          <input type=\"submit\" className=\"mdl-button mdl-js-button mdl-button--raised\" id=\"verify-code-button\" value=\"Verify Code\"/>\n          <button className=\"mdl-button mdl-js-button mdl-button--raised\" id=\"cancel-verify-code-button\">Cancel</button>\n        </form>\n\n      </div>\n      </Container>\n    );\n}\n\nexport default PhoneAuthProvide;","/Users/imdaegeun/heavenMokdal/sdiary/src/components/Navigation.js",["97"],"import React, { useState } from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport { serviceAuth } from \"fbase\";\nimport { Container, Link } from \"@material-ui/core\";\nimport AppRouter from \"./Router\";\n\nconst Navigation = ({userObj,refreshUser}) => {\n\n    const drawerWidth = 100;\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        display: 'flex',\n      },\n      appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n      },\n      appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n      },\n      hide: {\n        display: 'none',\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n      drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n      },\n      contentShift: {\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n      },\n    }));\n\n      const classes = useStyles();\n      const [open, setOpen] = useState(false);\n      const theme = useTheme();\n\n      const handleDrawerOpen = () => {\n        setOpen(true);\n      };\n      const handleDrawerClose = () => {\n        setOpen(false);\n      };\n      const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n      const signOut = () => {\n        serviceAuth.signOut();\n        refreshUser();\n        window.location.reload();\n      }\n\n    return (\n    <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            목달보고\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n            <ListItem button>\n              <Link href=\"/sdiary/#/\">Home</Link>\n            </ListItem>\n            <ListItem button>\n              <Link href=\"/sdiary/#/profile\">My Profile</Link>\n            </ListItem>\n            <ListItem button>\n              <Link href=\"/sdiary/#/statistics\">수치확인</Link>\n            </ListItem>\n            <ListItem button>\n              <Link href=\"/sdiary/#/update\">목달수정</Link>\n            </ListItem>\n            {userObj.checkObj &&\n            <>\n              <ListItem button><Link href=\"#\" onClick={signOut}>로그아웃</Link></ListItem>\n            </>\n            }\n        </List>\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n              <AppRouter userObj={userObj} refreshUser={refreshUser} />\n          </Container>\n        </main>\n      </div>\n    );\n    \n}\n\nexport default Navigation;","/Users/imdaegeun/heavenMokdal/sdiary/src/fbase.js",[],"/Users/imdaegeun/heavenMokdal/sdiary/src/components/Router.js",["98"],"import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CheckPerson from \"router/Check\";\nimport EditProfile from \"router/EditProfile\";\nimport Profile from \"router/Profile\";\nimport Statistics from \"router/Statistics\";\nimport Update from \"router/Update\";\nimport DetailDiary from \"./DetailDiary\";\nimport Invite from \"router/Input\";\n\nconst AppRouter = ({userObj, refreshUser}) => {\n\n   \n    return (\n        <Router>\n            <Switch>\n            { \n                (\n                <>\n                    <Route exact path=\"/\">\n                        {Boolean(userObj.adminSign) ? (\n                            Boolean(userObj.checkObj) ? <Invite userObj={userObj} refreshUser={refreshUser} /> : <EditProfile userObj={userObj} refreshUser={refreshUser} />\n                        ) : \"관리자 승인 기다리는 중...\"}\n                        {/* <CheckPerson userObj={userObj} refreshUser={refreshUser} /> */}\n                    </Route>\n                    <Route exact path=\"/profile\" >\n                        {Boolean(userObj.adminSign) ? (\n                            Boolean(userObj.checkObj) ? <Profile userObj={userObj} refreshUser={refreshUser} /> : <EditProfile userObj={userObj} refreshUser={refreshUser} />\n                        ) : \"관리자 승인 기다리는 중...\"}\n                        {/* <Profile userObj={userObj} refreshUser={refreshUser} /> */}\n                    </Route>\n                    <Route exact path=\"/statistics\" >\n                        {Boolean(userObj.adminSign) ? (\n                            Boolean(userObj.checkObj) ? <Statistics userObj={userObj} refreshUser={refreshUser} /> : <EditProfile userObj={userObj} refreshUser={refreshUser} />\n                        ) : \"관리자 승인 기다리는 중...\"}\n                        {/* <Statistics userObj={userObj} refreshUser={refreshUser} /> */}\n                    </Route>\n                    <Route exact path=\"/update\" >\n                        {Boolean(userObj.adminSign) ? (\n                            Boolean(userObj.checkObj) ? <Update userObj={userObj} refreshUser={refreshUser} /> : <EditProfile userObj={userObj} refreshUser={refreshUser} />\n                        ) : \"관리자 승인 기다리는 중...\"}\n                        {/* <Update userObj={userObj} refreshUser={refreshUser} /> */}\n                    </Route>\n                    \n                    <Route exact path=\"/detailDiary/:id/:isOwner\" component={DetailDiary} />\n                </>\n                )\n               \n            }\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","/Users/imdaegeun/heavenMokdal/sdiary/src/components/DetailDiary.js",["99"],"import { Button } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Parser from 'html-react-parser';\n\nconst DetailDiary = ({match}) => {\n    \n    const {params : {id,isOwner}} = match;\n    const [newText, setNewText] = useState(\"\");\n\n    const getDiary = async () => {\n        const diary = await dbService.doc(`diarys/${id}`).get();\n        return diary;\n    }\n\n    useEffect(\n        () => {\n            getDiary().then((result) => {\n                setNewText(result.data().text);\n            });\n        }\n    , []);\n    \n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        avatar: {\n          margin: theme.spacing(1),\n          backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n      }));\n\n      const classes = useStyles();\n\n      const onSubmit = async(event) => {\n        event.preventDefault();\n        await dbService.doc(`diarys/${id}`).update({\n            text : newText.replace(/(\\n|\\r\\n)/g, '<br>'),\n        });\n        window.location.href=\"/sdiary/#/\";\n        \n    };\n\n    const onChange = (event) => {\n        const {target : {value}} = event;\n        setNewText(value);\n    };\n\n    return (\n        <>\n        {!isOwner ? \n            (\n            <form onSubmit={onSubmit}>\n            <TextField\n                id=\"outlined-multiline-static\"\n                label=\"수정\"\n                multiline rows={5}\n                defaultValue=\"Default Value\"\n                variant=\"outlined\"\n                onChange={onChange} \n                value={newText}\n                fullWidth\n            />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            수정\n          </Button>\n        </form>\n\n            ) \n            \n            :\n\n            ( \n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            \n            {Parser(newText)}\n            \n            </Typography>\n          </Container>\n        </div>\n\n\n\n\n            // <div>\n            //     {newText}\n            // </div>\n            )   \n        }\n       </>\n    );\n}\n\nexport default DetailDiary;","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Check.js",[],"/Users/imdaegeun/heavenMokdal/sdiary/src/router/Auth.js",[],["100","101"],"/Users/imdaegeun/heavenMokdal/sdiary/src/router/Profile.js",["102"],"import { checkAdminSign } from \"config/common\";\nimport React from \"react\";\nimport EditProfile from \"./EditProfile\";\n\nconst Profile = ({userObj,refreshUser}) => {\n\n\n    return (\n        <>\n        {\n                Boolean(userObj.checkObj) ? \"Profile\" : <EditProfile userObj={userObj} refreshUser={refreshUser} />\n        }\n        \n        </>\n    );\n}\n\nexport default Profile;","/Users/imdaegeun/heavenMokdal/sdiary/src/router/EditProfile.js",["103"],"import { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst EditProfile = ({userObj,refreshUser}) => {\n\n    const [newsector, setSector] = useState(userObj.sector);\n    // const [newteam, setTeam] = useState(userObj.team);\n    const [newusername, setUsername] = useState(userObj.username);\n    const [checkSector, setCheckSector] = useState(false);\n    let newteam = 0;\n\n    useEffect(\n        () => {\n            if(isNumberValid(newsector)){\n                setCheckSector(true);\n            };   \n        }\n        ,[]\n    );\n\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        avatar: {\n          margin: theme.spacing(1),\n          backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(3),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n      }));\n\n    const classes = useStyles();\n\n    const onChange = (event) => {\n        const {target : {name, value}} = event;\n        if(name === \"sector\") {\n            setSector(value);\n            if(isNumberValid(value)){\n                setCheckSector(true);\n            };\n        } else if(name ===\"username\") {\n            setUsername(value);\n        } \n        // else if(name ===\"team\") {\n        //     setTeam(value);\n        //     if(isNumberValid(value)){\n        //       setCheckSector(true);\n        //   };\n    \n        // }\n    }\n\n    const isNumberValid = (sectorNum) => {\n        var pattern = /^[0-9]*$/;\n        if(sectorNum === null){\n            return 0;\n        }\n        return sectorNum.search(pattern) !== -1;\n    }\n\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (newsector >= 1 && newsector <= 4){\n          newteam = 13\n        } else if (newsector >= 5 && newsector <= 8){\n          newteam = 14\n        } else if (newsector >= 9 && newsector <= 12){\n          newteam = 15\n        } else if (newsector >= 13 && newsector <= 16){\n          newteam = 16\n        } else if (newsector >= 17 && newsector <= 20){\n          newteam = 17\n        } \n        if(checkSector){\n            await dbService.doc(`users/${userObj.id}`).update({\n                sector:newsector,\n                username:newusername,\n                team:newteam,\n            });\n           \n        } else {\n            alert(\"구역은 숫자만 가능\");\n        }\n       \n        refreshUser();\n    }\n    \n    return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"구역입력 (숫자만)\"\n                name=\"sector\"\n                value={newsector}\n                onChange={onChange}\n              />\n            </Grid>\n\n            {/* <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"팀입력 (숫자만)\"\n                name=\"team\"\n                value={newteam}\n                onChange={onChange}\n              />\n            </Grid> */}\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"username\"\n                label=\"이름입력\"\n                value={newusername}\n                onChange={onChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            제출\n          </Button>\n       \n        </form>\n      \n      </div>\n    </Container>\n    );\n}\n\nexport default EditProfile;","/Users/imdaegeun/heavenMokdal/sdiary/src/components/DiaryFactory.js",["104"],"/Users/imdaegeun/heavenMokdal/sdiary/src/router/Diary.js",["105","106","107"],"/Users/imdaegeun/heavenMokdal/sdiary/src/components/InputDto.js",["108"],"import React, { useEffect, useState } from \"react\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\n\nconst InputDto = ({classes, input, onInput, update = false})=> {\n\n    const key = !update ? input.key : input.id;\n\n    const [inviteMan, setInviteMan] = useState(!update ? \"\" : input.inviteMan);\n    const [targetMan, setTargetMan] = useState(!update ? \"\" : input.targetMan);\n    const [step, setStep] = useState(!update ?\"대상자\" : input.step);\n    const [address, setAddress] = useState(!update ?\"남구\" : input.address);\n    const [gender, setGender] = useState(!update ?\"남\" : input.gender);\n    \n    useEffect(\n      () => {\n        onInput({\n          step: step,\n          key : key\n        });\n        onInput({\n          address: address,\n          key : key\n        });\n        onInput({\n          gender: gender,\n          key : key\n        });\n      }\n     , []);\n    \n\n\n    const onChange = (event) => {\n        const {target : {name,value}} = event;\n        if(name === \"inviteMan\") {\n          setInviteMan(value);\n          onInput({\n            inviteMan: value,\n            key : key\n          })\n        } else if(name === \"targetMan\"){\n          setTargetMan(value);\n          onInput({\n            targetMan: value,\n            key : key\n          })\n        } else if(name === \"step\") {\n          setStep(value);\n          onInput({\n            step : value,\n            key : key\n          })\n        } else if(name === \"address\") {\n          setAddress(value);\n          onInput({\n            address : value,\n            key : key\n          })\n        } else if(name === \"gender\") {\n          setGender(value);\n          onInput({\n            gender:value,\n            key:key\n          })\n        }\n        \n    }\n\n    return (\n      <>\n          <TextField\n            variant=\"outlined\"\n            required\n            label=\"인도자\"\n            rowsMax={1}  \n            name=\"inviteMan\"\n            value={inviteMan}\n            onChange={onChange}\n            placeholder=\"인도자\"\n          />\n          <TextField\n            variant=\"outlined\"\n            required\n            label=\"열매이름\"\n            rowsMax={1}  \n            name=\"targetMan\"\n            value={targetMan}\n            onChange={onChange}\n            placeholder=\"열매이름\"\n          />\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">단계</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={step}\n              name=\"step\"\n              onChange={onChange}\n              label=\"단계\"\n            >\n              <MenuItem value={\"대상자\"}>대상자</MenuItem>\n              <MenuItem value={\"합당한자\"}>합당한자</MenuItem>\n              <MenuItem value={\"복음방\"}>복음방</MenuItem>\n              <MenuItem value={\"센터확정자\"}>센터확정자</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">주소</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={address}\n              name=\"address\"\n              onChange={onChange}\n              label=\"주소\"\n            >\n              <MenuItem value={\"남구\"}>남구</MenuItem>\n              <MenuItem value={\"중구\"}>중구</MenuItem>\n              <MenuItem value={\"동구\"}>동구</MenuItem>\n              <MenuItem value={\"북구\"}>북구</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">성별</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={gender}\n              name=\"gender\"\n              onChange={onChange}\n              label=\"성별\"\n            >\n              <MenuItem value={\"남\"}>남</MenuItem>\n              <MenuItem value={\"여\"}>여</MenuItem>\n            </Select>\n          </FormControl>\n    </>\n    )\n\n}\n\nexport default InputDto\n","/Users/imdaegeun/heavenMokdal/sdiary/src/config/common.js",["109"],"import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    \n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '14ch',\n      },\n      \n      border: '0.5rem outset',\n      borderRadius: 12,\n      marginBottom: 15,\n      padding: 7,\n    },\n    tableContainer: {\n      marginBottom: 25,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 100,\n    },\n    dateFormControl : {\n      margin: theme.spacing(1),\n      minWidth: 180,\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    btn: {\n      border: 0,\n      lineHeight: 2.5,\n      padding: theme.spacing(0, 3),\n      fontSize: '1rem',\n      textAlign: 'center',\n      color: '#fff',\n      textShadow: '1px 1px 1px #000',\n      borderRadius: '10px',\n      backgroundColor: 'rgba(220, 0, 0, 1)',\n      marginTop:15,\n      \n    },\n    margin: {\n      marginTop: 20,\n      width: '50px',\n      height: '30px',\n    },\n    table: {\n      minWidth: 650,\n      \n    },\n    form: {\n      marginTop: theme.spacing(3),\n    },\n    tableFont:{\n      fontWeight:'bold'\n    },\n    calendar: {\n      marginBottom : 20,\n    },\n    \n}));\n\n// export const checkAdminSign = (userObj) => {\n//   if(!userObj.adminSign) {\n//     alert(\"관리자 승인이 필요합니다.\")\n//     window.location.href=\"/\"\n//   }  \n// }\n\nexport const makeCreatedTime = () => {\n  const today = new Date();   \n  const year = today.getFullYear(); // 년도\n  const month = today.getMonth() + 1;  // 월\n  const date = today.getDate();  // 날짜\n  const createdAt = year + '/' + month + '/' + date\n  return new Date(createdAt).getTime();\n}\n\nexport const totalCountBySector = () => (\n  {\n    \"13팀\" : [\n      {\"1구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"2구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"3구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"4구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }}   \n    ],\n\n    \"14팀\" : [\n      {\"5구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"6구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"7구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"8구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }}   \n    ],\n    \"15팀\" : [\n      {\"9구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"10구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"11구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"12구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }}   \n    ],\n    \"16팀\" : [\n      {\"13구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"14구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"15구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"16구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }}   \n    ],\n    \"17팀\" : [\n      {\"17구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"18구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"19구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }},\n      {\"20구역\" :{\n          \"count1\": 0,\n          \"count2\": 0,\n          \"count3\": 0,\n          \"count4\": 0,\n      }}   \n    ],\n  }\n)\n\nexport const totalCountByTeam = () => (\n  {\n    \"13팀\" : {\n      \"count1\":0,\n      \"count2\":0,\n      \"count3\":0,\n      \"count4\":0,\n    },\n    \"14팀\" : {\n      \"count1\":0,\n      \"count2\":0,\n      \"count3\":0,\n      \"count4\":0,\n    },\n    \"15팀\" : {\n      \"count1\":0,\n      \"count2\":0,\n      \"count3\":0,\n      \"count4\":0,\n    },\n    \"16팀\" : {\n      \"count1\":0,\n      \"count2\":0,\n      \"count3\":0,\n      \"count4\":0,\n    },\n    \"17팀\" : {\n      \"count1\":0,\n      \"count2\":0,\n      \"count3\":0,\n      \"count4\":0,\n    },\n  }\n)\n\nexport const totalCount = () => (\n  {\n    \"대상자\" : 0,\n    \"합당한자\" : 0,\n    \"복음방\" : 0,\n    \"센터확정자\" : 0,\n  }\n)\n\nexport const timeStampOneDay = (24*60*60*1000)","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Input.js",["110","111","112"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport {useStyles , checkAdminSign, makeCreatedTime } from \"config/common\";\nimport InputDto from \"../components/InputDto\";\nimport { dbService } from \"fbase\";\n\n\nconst Input = ({userObj,refreshUser}) => {\n\n    const [inputs, setInputs] = useState([]);\n    const makeObj = (key) => ({\n      key:key,\n      inviteMan:'',\n      targetMan:'',\n      step:'',\n      username : userObj.username,\n      sector : userObj.sector,\n      team: userObj.team,\n      creatorId : userObj.creatorId,\n      address : '',\n      gender : '',\n    })\n\n    useEffect(\n      () => {\n        setInputs(inputs.concat([makeObj(1)]));\n      }\n     , []);\n\n    const classes = useStyles();\n    \n    const keyNum = useRef(2);\n    const plus = () => {\n      setInputs(inputs.concat([\n        makeObj(keyNum.current)\n      ]));\n      keyNum.current += 1;\n    }\n\n    const onSubmit =  async(event) => {\n      event.preventDefault();\n        \n      try{\n        const count = inputs.length\n        let countcheck = 0\n        const createdAt = makeCreatedTime()\n        inputs.map( async(input) => {\n          countcheck += 1\n          input.createdAt = createdAt\n          input.createdAtTimeStamp = Date.now()\n          await dbService.collection(\"lists\").add(input);\n          if(count === countcheck){\n            window.location.reload();\n          }\n        })\n      } catch(e){\n        console.log(e)\n        alert(\"등록 실패\")\n        \n      }\n    }\n    \n    const remove = (event) => {\n      const {target : {id}} = event\n      setInputs(inputs.filter(input => input.key !== parseInt(id)))\n    }\n\n    const handleInputs = (data) => {\n      inputs.map(input => {\n        if(input.key === parseInt(data.key)){\n          if(data.hasOwnProperty('inviteMan')){\n            input.inviteMan = data.inviteMan\n          } else if (data.hasOwnProperty('targetMan')){\n            input.targetMan = data.targetMan\n          } else if (data.hasOwnProperty('step')) {\n            input.step = data.step\n          } else if (data.hasOwnProperty('address')) {\n            input.address = data.address\n          } else if (data.hasOwnProperty('gender')) {\n            input.gender = data.gender\n          }\n        }\n      })\n    }\n\n    return (\n      <>\n      <Grid container>\n        <form autoComplete=\"off\" onSubmit={onSubmit} className={classes.form}>\n          { \n            inputs.map((input) => (\n              <Grid item key={input.key} xs className={classes.root} >\n                <InputDto classes={classes} input={input} onInput={handleInputs} />\n                { Boolean(input.key !== 1) && \n                  <>\n                  <button \n                    onClick={remove}\n                    id = {input.key}\n                    className={classes.margin}>\n                    삭제\n                  </button>\n                </>\n              }\n              </Grid>\n              \n            ))\n          }\n          <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={plus}\n          fullWidth\n        >\n          +\n        </Button>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            등록\n          </Button>\n\n        </form>\n      </Grid>\n      </>\n    );\n}\n\nexport default Input;","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Statistics.js",["113","114","115"],"import { checkAdminSign, makeCreatedTime, totalCountBySector, useStyles,totalCountByTeam,totalCount, timeStampOneDay } from \"config/common\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\n\nconst Statistics = ({userObj}) => {\n\n    const classes = useStyles();\n    const today = makeCreatedTime();\n\n    const [listsArray,setListsArray] = useState([])\n    const [teams,setTeams] = useState([])\n    const [cal, setCal] = useState(new Date());\n\n    let [lists,setLists] = useState([])\n    let [yesterdayLists,setYesterdayLists] = useState([])\n    let [countSector,setCountSector] = useState(totalCountBySector())\n    let [countTeam, setCountTeam] = useState(totalCountByTeam())\n    let [countTotal,setCountTotal] = useState(totalCount());\n    let [countYesterDayTotal,setCountYesterDayTotal] = useState(totalCount())\n    \n    const createForLists = (listsArray,date) => {\n        lists = []\n        yesterdayLists = []\n        \n        listsArray.map((list) => {\n            \n            if(list.createdAtTimeStamp <= (date + timeStampOneDay)){\n                lists.push(list)\n            }\n            if(list.createdAtTimeStamp <= (date)){\n                yesterdayLists.push(list)\n            }\n        })\n        setLists(lists);\n        setYesterdayLists(yesterdayLists)\n    }\n   \n    const createForCounts = (teamsArray) => {\n\n        const check = [[1,5,9,13,17],\n                               [2,6,10,14,18],\n                               [3,7,11,15,19],\n                               [4,8,12,16,20]]\n\n        const makeCheckSectorAndCount = (check,list,yesterday = false) => {\n\n            if(!yesterday) { \n              \n                let checkSector = 0\n                if (check[0].indexOf(parseInt(list.sector)) >= 0) {\n                    checkSector = 0\n                } else if (check[1].indexOf(parseInt(list.sector)) >= 0){\n                    checkSector = 1\n                } else if (check[2].indexOf(parseInt(list.sector)) >= 0){\n                    checkSector = 2\n                } else if (check[3].indexOf(parseInt(list.sector)) >= 0){\n                    checkSector = 3\n                }\n                \n                switch (list.step) {\n                    case \"대상자\":\n                        countTeam[list.team+\"팀\"][\"count1\"] += 1\n                        countSector[list.team+\"팀\"][checkSector][list.sector+\"구역\"]['count1'] += 1\n                        break;\n                    case \"합당한자\":\n                        countTeam[list.team+\"팀\"][\"count2\"] += 1\n                        countSector[list.team+\"팀\"][checkSector][list.sector+\"구역\"]['count2'] += 1\n                        break;\n                    case \"복음방\":\n                        countTeam[list.team+\"팀\"][\"count3\"] += 1\n                        countSector[list.team+\"팀\"][checkSector][list.sector+\"구역\"]['count3'] += 1\n                        break;\n                    case \"센터확정자\":\n                        countTeam[list.team+\"팀\"][\"count4\"] += 1\n                        countSector[list.team+\"팀\"][checkSector][list.sector+\"구역\"]['count4'] += 1\n                        break;\n                    default:\n                        break;\n                }\n                countTotal[list.step] += 1\n            } else {\n                countYesterDayTotal[list.step] += 1\n            }\n        }\n\n        for(let list of lists){\n            makeCheckSectorAndCount(check,list)    \n        }\n\n        for(let list of yesterdayLists){\n            makeCheckSectorAndCount(check,list,true)\n        }\n\n        setTeams(teamsArray)\n        setCountSector(countSector);\n        setCountTeam(countTeam);\n        setCountTotal(countTotal)\n        setCountYesterDayTotal(countYesterDayTotal)\n\n    }\n\n    const onDateChange = (event) => {\n        setCal(event)\n        countSector = totalCountBySector();\n        countTeam = totalCountByTeam();\n        countTotal = totalCount();\n        countYesterDayTotal = totalCount();\n        createForLists(listsArray, new Date(event).getTime())\n        createForCounts(teams)\n    }\n\n    const callListsAndTeams = () => {\n        dbService.collection(\"lists\").orderBy(\"createdAtTimeStamp\",\"desc\").onSnapshot((snapshot) => {\n            const listsArray = snapshot.docs.map((doc) => (\n            {\n                id:doc.id,\n                ...doc.data(),\n            }\n            ));\n            setListsArray(listsArray)\n            createForLists(listsArray,today)\n            \n            dbService.collection(\"teams\").orderBy(\"number\").onSnapshot((snapshot) => {\n                 const teamsArray = snapshot.docs.map((doc) => (\n                         {...doc.data()}\n                 ));\n             \n                 createForCounts(teamsArray)\n             })\n         });\n\n    }\n\n    useEffect(\n        () => {\n            callListsAndTeams()\n        }\n    , []);\n\n    \n\n\n    return (\n        <>\n            <Calendar\n                onChange={onDateChange}\n                value={cal}\n                maxDate = {new Date()}\n                className = {classes.calendar}\n            />\n            \n            {\n                teams.map((te)=>(\n               \n                <TableContainer component={Paper} className={classes.tableContainer}>\n                <Table stickyHeader className={classes.table} aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow >\n                        <TableCell >{te.team}</TableCell>\n                        <TableCell >대</TableCell>\n                        <TableCell >합</TableCell>\n                        <TableCell >복</TableCell>\n                        <TableCell >확</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                {countSector[te.team].map((t) => (\n                    \n                <TableRow >\n                    <TableCell component=\"th\" scope=\"row\">\n                        {Object.getOwnPropertyNames(t)[0]}\n                    </TableCell>\n                    <TableCell>{t[Object.getOwnPropertyNames(t)[0]].count1}</TableCell>\n                    <TableCell>{t[Object.getOwnPropertyNames(t)[0]].count2}</TableCell>\n                    <TableCell>{t[Object.getOwnPropertyNames(t)[0]].count3}</TableCell>\n                    <TableCell>{t[Object.getOwnPropertyNames(t)[0]].count4}</TableCell>\n                </TableRow>\n                ))}\n                <TableRow>\n                    <TableCell className={classes.tableFont} component=\"th\" scope=\"row\">\n                        합계\n                    </TableCell>\n                    <TableCell className={classes.tableFont}>{countTeam[te.team].count1}</TableCell>\n                    <TableCell className={classes.tableFont}>{countTeam[te.team].count2}</TableCell>\n                    <TableCell className={classes.tableFont}>{countTeam[te.team].count3}</TableCell>\n                    <TableCell className={classes.tableFont}>{countTeam[te.team].count4}</TableCell>\n                </TableRow>\n                </TableBody>\n            </Table>\n            </TableContainer>\n                    \n            ))\n            }\n\n            <TableContainer component={Paper} className={classes.tableContainer}>\n                <Table className={classes.table} aria-label=\"caption table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell ></TableCell>\n                        <TableCell >대상자</TableCell>\n                        <TableCell >합당한자</TableCell>\n                        <TableCell >복음방</TableCell>\n                        <TableCell >센터확정자</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell className={classes.tableFont} component=\"th\" scope=\"row\">\n                            총 합계\n                        </TableCell>\n                        <TableCell className={classes.tableFont}>{countTotal[\"대상자\"]}</TableCell>\n                        <TableCell className={classes.tableFont}>{countTotal[\"합당한자\"]}</TableCell>\n                        <TableCell className={classes.tableFont}>{countTotal[\"복음방\"]}</TableCell>\n                        <TableCell className={classes.tableFont}>{countTotal[\"센터확정자\"]}</TableCell>\n                    </TableRow>\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <TableContainer component={Paper} className={classes.tableContainer}>\n                <Table className={classes.table} aria-label=\"caption table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell >전날대비</TableCell>\n                        <TableCell >대상자</TableCell>\n                        <TableCell >합당한자</TableCell>\n                        <TableCell >복음방</TableCell>\n                        <TableCell >센터확정자</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell className={classes.tableFont} component=\"th\" scope=\"row\">\n                        </TableCell>\n                        <TableCell className={classes.tableFont}>{countTotal[\"대상자\"] - countYesterDayTotal[\"대상자\"] }</TableCell>\n                        <TableCell className={classes.tableFont}>{countTotal[\"합당한자\"] - countYesterDayTotal[\"합당한자\"]}</TableCell>\n                        <TableCell className={classes.tableFont}>{countTotal[\"복음방\"] - countYesterDayTotal[\"복음방\"]}</TableCell>\n                        <TableCell className={classes.tableFont}>{countTotal[\"센터확정자\"] - countYesterDayTotal[\"센터확정자\"]}</TableCell>\n                    </TableRow>\n                </TableBody>\n                </Table>\n            </TableContainer>          \n        </>\n    );\n}\n\nexport default Statistics","/Users/imdaegeun/heavenMokdal/sdiary/src/router/Update.js",["116","117","118","119","120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":13,"nodeType":"127","messageId":"128","endLine":2,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":127,"column":35,"nodeType":"131","messageId":"132","endLine":127,"endColumn":36,"suggestions":"133"},{"ruleId":"129","severity":1,"message":"134","line":127,"column":37,"nodeType":"131","messageId":"132","endLine":127,"endColumn":38,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":218,"column":9,"nodeType":"138","endLine":218,"endColumn":11,"suggestions":"139"},{"ruleId":"125","severity":1,"message":"140","line":90,"column":13,"nodeType":"127","messageId":"128","endLine":90,"endColumn":29},{"ruleId":"125","severity":1,"message":"141","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":19},{"ruleId":"136","severity":1,"message":"142","line":26,"column":7,"nodeType":"138","endLine":26,"endColumn":9,"suggestions":"143"},{"ruleId":"121","replacedBy":"144"},{"ruleId":"123","replacedBy":"145"},{"ruleId":"125","severity":1,"message":"146","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"136","severity":1,"message":"147","line":25,"column":10,"nodeType":"138","endLine":25,"endColumn":12,"suggestions":"148"},{"ruleId":"125","severity":1,"message":"149","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":14},{"ruleId":"125","severity":1,"message":"150","line":8,"column":18,"nodeType":"127","messageId":"128","endLine":8,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":11,"column":17,"nodeType":"153","messageId":"154","endLine":11,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":15,"column":21,"nodeType":"153","messageId":"154","endLine":15,"endColumn":23},{"ruleId":"136","severity":1,"message":"155","line":33,"column":8,"nodeType":"138","endLine":33,"endColumn":10,"suggestions":"156"},{"ruleId":"125","severity":1,"message":"157","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"146","line":4,"column":21,"nodeType":"127","messageId":"128","endLine":4,"endColumn":35},{"ruleId":"136","severity":1,"message":"158","line":29,"column":8,"nodeType":"138","endLine":29,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":70,"column":24,"nodeType":"162","messageId":"163","endLine":70,"endColumn":26},{"ruleId":"125","severity":1,"message":"146","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":34,"column":31,"nodeType":"162","messageId":"163","endLine":34,"endColumn":33},{"ruleId":"136","severity":1,"message":"164","line":147,"column":7,"nodeType":"138","endLine":147,"endColumn":9,"suggestions":"165"},{"ruleId":"125","severity":1,"message":"166","line":1,"column":38,"nodeType":"127","messageId":"128","endLine":1,"endColumn":44},{"ruleId":"125","severity":1,"message":"146","line":4,"column":21,"nodeType":"127","messageId":"128","endLine":4,"endColumn":35},{"ruleId":"125","severity":1,"message":"167","line":4,"column":37,"nodeType":"127","messageId":"128","endLine":4,"endColumn":52},{"ruleId":"136","severity":1,"message":"168","line":24,"column":8,"nodeType":"138","endLine":24,"endColumn":10,"suggestions":"169"},{"ruleId":"160","severity":1,"message":"161","line":56,"column":26,"nodeType":"162","messageId":"163","endLine":56,"endColumn":28},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'firebaseui' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\(.","Literal","unnecessaryEscape",["172","173"],"Unnecessary escape character: \\).",["174","175"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cancelVerification', 'onSignInSubmit', 'onVerifyCodeSubmit', 'updateSignInButtonUI', and 'updateVerifyCodeButtonUI'. Either include them or remove the dependency array.","ArrayExpression",["176"],"'fixedHeightPaper' is assigned a value but never used.","'CheckPerson' is defined but never used.","React Hook useEffect has a missing dependency: 'getDiary'. Either include it or remove the dependency array.",["177"],["170"],["171"],"'checkAdminSign' is defined but never used.","React Hook useEffect has a missing dependency: 'newsector'. Either include it or remove the dependency array.",["178"],"'Parser' is defined but never used.","'setText' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'address', 'gender', 'key', 'onInput', and 'step'. Either include them or remove the dependency array. If 'onInput' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["179"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'inputs' and 'makeObj'. Either include them or remove the dependency array. You can also do a functional update 'setInputs(i => ...)' if you only need 'inputs' in the 'setInputs' call.",["180"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'callListsAndTeams'. Either include it or remove the dependency array.",["181"],"'useRef' is defined but never used.","'makeCreatedTime' is defined but never used.","React Hook useEffect has a missing dependency: 'userObj.creatorId'. Either include it or remove the dependency array. If 'setOutputs' needs the current value of 'userObj.creatorId', you can also switch to useReducer instead of useState and read 'userObj.creatorId' in the reducer.",["182"],"no-global-assign","no-unsafe-negation",{"messageId":"183","fix":"184","desc":"185"},{"messageId":"186","fix":"187","desc":"188"},{"messageId":"183","fix":"189","desc":"185"},{"messageId":"186","fix":"190","desc":"188"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"removeEscape",{"range":"205","text":"206"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"207","text":"208"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"209","text":"206"},{"range":"210","text":"208"},"Update the dependencies array to be: [cancelVerification, onSignInSubmit, onVerifyCodeSubmit, updateSignInButtonUI, updateVerifyCodeButtonUI]",{"range":"211","text":"212"},"Update the dependencies array to be: [getDiary]",{"range":"213","text":"214"},"Update the dependencies array to be: [newsector]",{"range":"215","text":"216"},"Update the dependencies array to be: [address, gender, key, onInput, step]",{"range":"217","text":"218"},"Update the dependencies array to be: [inputs, makeObj]",{"range":"219","text":"220"},"Update the dependencies array to be: [callListsAndTeams]",{"range":"221","text":"222"},"Update the dependencies array to be: [userObj.creatorId]",{"range":"223","text":"224"},[4443,4444],"",[4443,4443],"\\",[4445,4446],[4445,4445],[7758,7760],"[cancelVerification, onSignInSubmit, onVerifyCodeSubmit, updateSignInButtonUI, updateVerifyCodeButtonUI]",[802,804],"[getDiary]",[862,864],"[newsector]",[1079,1081],"[address, gender, key, onInput, step]",[767,769],"[inputs, makeObj]",[5279,5281],"[callListsAndTeams]",[774,776],"[userObj.creatorId]"]