[{"C:\\Users\\user\\sdiary\\src\\index.js":"1","C:\\Users\\user\\sdiary\\src\\reportWebVitals.js":"2","C:\\Users\\user\\sdiary\\src\\components\\App.js":"3","C:\\Users\\user\\sdiary\\src\\components\\Router.js":"4","C:\\Users\\user\\sdiary\\src\\fbase.js":"5","C:\\Users\\user\\sdiary\\src\\router\\Auth.js":"6","C:\\Users\\user\\sdiary\\src\\router\\Home.js":"7","C:\\Users\\user\\sdiary\\src\\router\\Profile.js":"8","C:\\Users\\user\\sdiary\\src\\components\\Navigation.js":"9","C:\\Users\\user\\sdiary\\src\\components\\PhoneAuthProvide.js":"10","C:\\Users\\user\\sdiary\\src\\router\\Check.js":"11","C:\\Users\\user\\sdiary\\src\\router\\EditProfile.js":"12","C:\\Users\\user\\sdiary\\src\\router\\Diary.js":"13","C:\\Users\\user\\sdiary\\src\\components\\DiaryFactory.js":"14","C:\\Users\\user\\sdiary\\src\\components\\DetailDiary.js":"15"},{"size":489,"mtime":1609553557038,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1818,"mtime":1610031610686,"results":"19","hashOfConfig":"17"},{"size":1196,"mtime":1610038153115,"results":"20","hashOfConfig":"17"},{"size":604,"mtime":1609839698173,"results":"21","hashOfConfig":"17"},{"size":196,"mtime":1610025832414,"results":"22","hashOfConfig":"17"},{"size":4131,"mtime":1610040792613,"results":"23","hashOfConfig":"17"},{"size":342,"mtime":1610032473439,"results":"24","hashOfConfig":"17"},{"size":5775,"mtime":1610067469958,"results":"25","hashOfConfig":"17"},{"size":10388,"mtime":1610029142768,"results":"26","hashOfConfig":"17"},{"size":481,"mtime":1610025853294,"results":"27","hashOfConfig":"17"},{"size":6166,"mtime":1610036260942,"results":"28","hashOfConfig":"17"},{"size":628,"mtime":1610040787163,"results":"29","hashOfConfig":"17"},{"size":2051,"mtime":1610040792613,"results":"30","hashOfConfig":"17"},{"size":623,"mtime":1610038289604,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"vf94su",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},"C:\\Users\\user\\sdiary\\src\\index.js",[],["71","72"],"C:\\Users\\user\\sdiary\\src\\reportWebVitals.js",[],"C:\\Users\\user\\sdiary\\src\\components\\App.js",["73"],"import { dbService, serviceAuth } from \"fbase\";\nimport React,{useState,useEffect} from \"react\";\nimport AppRouter from \"components/Router\";\nimport Navigation from \"./Navigation\";\nimport PhoneAuthProvide from \"./PhoneAuthProvide\";\n\n\nfunction App() {\n  const [userObj, setUserObj] = useState(null);\n  const [isInit, setIsInit] = useState(false);\n\n  useEffect(\n    () => {\n      serviceAuth.onAuthStateChanged(\n        (user) => {\n          if(user){\n            getUser(user).then(\n              (result) => {\n                const checkObj = checkObjfun(result);\n                setUserObj({\n                  ...result,\n                  checkObj\n                });\n              }\n            ).catch((error) => {\n              console.log(error);\n            });\n          } \n          setIsInit(true);\n        });\n    } , []\n  );\n\n  const getUser = async (user) => {\n    const users = await dbService.collection(\"users\").where(\"creatorId\", \"==\", user.uid).get();\n    const userObj = users.docs.map(\n      (doc) => ({\n        id : doc.id,\n        ...doc.data(),\n      })\n    ); \n    return userObj[0];\n  }\n\n  const refreshUser = () => {\n    const user = serviceAuth.currentUser;\n    getUser(user).then(\n      (result) => {\n        const checkObj = checkObjfun(result);\n        setUserObj({\n          ...result,\n          checkObj\n        });\n      }\n    ).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  const checkObjfun = (userObj) => {\n    if(Boolean(userObj.position) && Boolean(userObj.sector) && Boolean(userObj.username)){\n       return true;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <>\n      {isInit ? (\n         Boolean(userObj) ? <Navigation userObj={userObj} refreshUser={refreshUser} /> : <PhoneAuthProvide /> \n      )  : \"Initializing\"}\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\sdiary\\src\\components\\Router.js",["74","75"],"import React from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"router/Auth\";\r\nimport CheckPerson from \"router/Check\";\r\nimport Profile from \"router/Profile\";\r\nimport DetailDiary from \"./DetailDiary\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({userObj, refreshUser}) => {\r\n\r\n   \r\n    return (\r\n        <Router>\r\n            {/* {isLoggIn && <Navigation isLoggIn={isLoggIn} userObj={userObj} refreshUser={refreshUser} />} */}\r\n            <Switch>\r\n            { \r\n                (\r\n                <>\r\n                    <Route exact path=\"/\">\r\n                        <CheckPerson userObj={userObj} refreshUser={refreshUser} />\r\n                    </Route>\r\n                    <Route exact path=\"/profile\" >\r\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                    </Route>\r\n                    <Route exact path=\"/detailDiary/:id\" component={DetailDiary} />\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </>\r\n                )\r\n               \r\n            }\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","C:\\Users\\user\\sdiary\\src\\fbase.js",[],"C:\\Users\\user\\sdiary\\src\\router\\Auth.js",[],"C:\\Users\\user\\sdiary\\src\\router\\Home.js",["76","77","78","79","80","81","82"],"import Diary from \"router/Diary\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DiaryFactory from \"components/DiaryFactory\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport detailDiary from \"components/DetailDiary\";\r\n\r\nconst Home = ({userObj}) => {\r\n\r\n    const [diarys, setDiarys] = useState([]);\r\n\r\n    useEffect(\r\n     () => {\r\n         dbService.collection(\"diarys\").onSnapshot((snapshot) => {\r\n            const diarysArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setDiarys(diarysArray);\r\n         });\r\n     }\r\n    , []);\r\n\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        \r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n\r\n        icon: {\r\n          marginRight: theme.spacing(2),\r\n        },\r\n        heroContent: {\r\n          backgroundColor: theme.palette.background.paper,\r\n          padding: theme.spacing(8, 0, 6),\r\n        },\r\n        heroButtons: {\r\n          marginTop: theme.spacing(4),\r\n        },\r\n        cardGrid: {\r\n          paddingTop: theme.spacing(8),\r\n          paddingBottom: theme.spacing(8),\r\n        },\r\n        card: {\r\n            \r\n          height: '100%',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        },\r\n        cardMedia: {\r\n          paddingTop: '56.25%', // 16:9\r\n        },\r\n        cardContent: {\r\n          flexGrow: 1,\r\n        },\r\n        footer: {\r\n          backgroundColor: theme.palette.background.paper,\r\n          padding: theme.spacing(6),\r\n        },\r\n      }));\r\n      \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n       \r\n        <div>\r\n            <DiaryFactory userObj={userObj} />\r\n\r\n            <Container className={classes.cardGrid} maxWidth=\"md\">\r\n            <Grid container spacing={4}>\r\n            {diarys.map((diary) => (\r\n              <Grid item key={diary.id} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"https://source.unsplash.com/random\"\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent} >\r\n                    <Diary key={diary.id} diaryObj={diary} /> \r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" href={`/#/detailDiary/${diary.id}`}>\r\n                      상세\r\n                    </Button>\r\n                    {diary.creatorId === userObj.creatorId ?\r\n\r\n                      (\r\n                      <>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        수정\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                       삭제\r\n                      </Button>\r\n                      </>\r\n                      )\r\n                      :\r\n                      userObj.username\r\n                    }\r\n                    \r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid> \r\n\r\n        </Container>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\user\\sdiary\\src\\router\\Profile.js",[],"C:\\Users\\user\\sdiary\\src\\components\\Navigation.js",["83","84","85","86","87","88","89","90","91","92","93"],"import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch,Link } from \"react-router-dom\";\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Links from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport AppRouter from \"./Router\";\r\n\r\n\r\nconst Navigation = ({userObj,refreshUser}) => {\r\n\r\n    const drawerWidth = 240;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          display: 'flex',\r\n        },\r\n        toolbar: {\r\n          paddingRight: 24, // keep right padding when drawer closed\r\n        },\r\n        toolbarIcon: {\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          padding: '0 8px',\r\n          ...theme.mixins.toolbar,\r\n        },\r\n        appBar: {\r\n          zIndex: theme.zIndex.drawer + 1,\r\n          transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n          }),\r\n        },\r\n        appBarShift: {\r\n          marginLeft: drawerWidth,\r\n          width: `calc(100% - ${drawerWidth}px)`,\r\n          transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n          }),\r\n        },\r\n        menuButton: {\r\n          marginRight: 36,\r\n        },\r\n        menuButtonHidden: {\r\n          display: 'none',\r\n        },\r\n        title: {\r\n          flexGrow: 1,\r\n        },\r\n        drawerPaper: {\r\n          position: 'relative',\r\n          whiteSpace: 'nowrap',\r\n          width: drawerWidth,\r\n          transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n          }),\r\n        },\r\n        drawerPaperClose: {\r\n          overflowX: 'hidden',\r\n          transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n          }),\r\n          width: theme.spacing(7),\r\n          [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n          },\r\n        },\r\n        appBarSpacer: theme.mixins.toolbar,\r\n        content: {\r\n          flexGrow: 1,\r\n          height: '100vh',\r\n          overflow: 'auto',\r\n        },\r\n        container: {\r\n          paddingTop: theme.spacing(4),\r\n          paddingBottom: theme.spacing(4),\r\n        },\r\n        paper: {\r\n          padding: theme.spacing(2),\r\n          display: 'flex',\r\n          overflow: 'auto',\r\n          flexDirection: 'column',\r\n        },\r\n        fixedHeight: {\r\n          height: 240,\r\n        },\r\n      }));\r\n\r\n      const classes = useStyles();\r\n\r\n      const [open, setOpen] = useState(false);\r\n      const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n      };\r\n      const handleDrawerClose = () => {\r\n        setOpen(false);\r\n      };\r\n      const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n    return (\r\n    <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              SDiary\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List><Links href=\"/sdiary/#/\">Home</Links></List>\r\n          <Divider />\r\n          <List><Links href=\"/sdiary/#/profile\">My Profile</Links></List>\r\n          <Divider />\r\n          {userObj.position ===\"(부)구역장\" &&\r\n           <List><Links href=\"/sdiary/#/profile\">구역원 체크</Links></List>\r\n          }\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n              <AppRouter userObj={userObj} refreshUser={refreshUser} />\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Navigation;","C:\\Users\\user\\sdiary\\src\\components\\PhoneAuthProvide.js",["94","95","96","97"],"import React,{useEffect} from \"react\";\r\nimport * as firebaseui from 'firebaseui'\r\nimport 'firebaseui/dist/firebaseui.css'\r\nimport { firebaseInstance, serviceAuth, dbService } from \"fbase\";\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Avatar, Typography } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nconst PhoneAuthProvide = () => {\r\n\r\n    function onSignInSubmit(e) {\r\n        e.preventDefault();\r\n        if (isPhoneNumberValid()) {\r\n          window.signingIn = true;\r\n          updateSignInButtonUI();\r\n          var phoneNumber = getPhoneNumberFromUserInput();\r\n          var appVerifier = window.recaptchaVerifier;\r\n          serviceAuth.signInWithPhoneNumber(phoneNumber, appVerifier)\r\n              .then(function (confirmationResult) {\r\n                // SMS sent. Prompt user to type the code from the message, then sign the\r\n                // user in with confirmationResult.confirm(code).\r\n                \r\n                window.confirmationResult = confirmationResult;\r\n                window.signingIn = false;\r\n                updateSignInButtonUI();\r\n                updateVerificationCodeFormUI();\r\n                updateVerifyCodeButtonUI();\r\n                updateSignInFormUI();\r\n              }).catch(function (error) {\r\n                // Error; SMS not sent\r\n                console.error('Error during signInWithPhoneNumber', error);\r\n                window.alert('Error during signInWithPhoneNumber:\\n\\n'\r\n                    + error.code + '\\n\\n' + error.message);\r\n                window.signingIn = false;\r\n                updateSignInFormUI();\r\n                updateSignInButtonUI();\r\n              });\r\n        }\r\n      }\r\n\r\n      \r\n      const addUser = async (user) => {\r\n        const users = await dbService.collection(\"users\").where(\"creatorId\", \"==\", user.uid).get();\r\n        const check = users.docs.length;\r\n        if (check === 0) {\r\n          getCheckUser(user);\r\n        }\r\n      }\r\n      \r\n      const getCheckUser = async(user) => {\r\n        await dbService.collection(\"users\").add({\r\n          creatorId : user.uid,\r\n          phoneNumber : user.phoneNumber,\r\n          username : null,\r\n          adminSign : false,\r\n          sector : null,\r\n          position : null\r\n        });\r\n      }\r\n    \r\n      /**\r\n       * Function called when clicking the \"Verify Code\" button.\r\n       */\r\n      function onVerifyCodeSubmit(e) {\r\n        e.preventDefault();\r\n        if (!!getCodeFromUserInput()) {\r\n          window.verifyingCode = true;\r\n          updateVerifyCodeButtonUI();\r\n          var code = getCodeFromUserInput();\r\n          window.confirmationResult.confirm(code).then((result) => {\r\n            // User signed in successfully.\r\n            var user = result.user;\r\n\r\n            addUser(user);\r\n\r\n            window.verifyingCode = false;\r\n            window.confirmationResult = null;\r\n            updateVerificationCodeFormUI();\r\n          }).catch(function (error) {\r\n            // User couldn't sign in (bad verification code?)\r\n            console.error('Error while checking the verification code', error);\r\n            window.alert('Error while checking the verification code:\\n\\n'\r\n                + error.code + '\\n\\n' + error.message);\r\n            window.verifyingCode = false;\r\n            updateSignInButtonUI();\r\n            updateVerifyCodeButtonUI();\r\n          });\r\n        }\r\n      }\r\n    \r\n      /**\r\n       * Cancels the verification code input.\r\n       */\r\n      function cancelVerification(e) {\r\n        e.preventDefault();\r\n        window.confirmationResult = null;\r\n        updateVerificationCodeFormUI();\r\n        updateSignInFormUI();\r\n      }\r\n    \r\n      /**\r\n       * Signs out the user when the sign-out button is clicked.\r\n       */\r\n      function onSignOutClick() {\r\n        serviceAuth.signOut();\r\n      }\r\n    \r\n      /**\r\n       * Reads the verification code from the user input.\r\n       */\r\n      function getCodeFromUserInput() {\r\n        return document.getElementById('verification-code').value;\r\n      }\r\n    \r\n      /**\r\n       * Reads the phone number from the user input.\r\n       */\r\n      function getPhoneNumberFromUserInput() {\r\n        return document.getElementById('phone-number').value;\r\n      }\r\n\r\n      /**\r\n       * Returns true if the phone number is valid.\r\n       */\r\n      function isPhoneNumberValid() {\r\n        var pattern = /^\\+[0-9\\s\\-\\(\\)]+$/;\r\n        var phoneNumber = getPhoneNumberFromUserInput();\r\n        return phoneNumber.search(pattern) !== -1;\r\n      }\r\n    \r\n      /**\r\n       * Updates the Sign-in button state depending on ReCAptcha and form values state.\r\n       */\r\n      function updateSignInButtonUI() {\r\n        document.getElementById('sign-in-button').disabled =\r\n           !isPhoneNumberValid()\r\n            || !!window.signingIn;\r\n      }\r\n    \r\n      /**\r\n       * Updates the Verify-code button state depending on form values state.\r\n       */\r\n      function updateVerifyCodeButtonUI() {\r\n        document.getElementById('verify-code-button').disabled =\r\n            !!window.verifyingCode\r\n            || !getCodeFromUserInput();\r\n      }\r\n    \r\n      /**\r\n       * Updates the state of the Sign-in form.\r\n       */\r\n      function updateSignInFormUI() {\r\n        if (serviceAuth.currentUser || window.confirmationResult) {\r\n          document.getElementById('sign-in-form').style.display = 'none';\r\n        } else {\r\n          document.getElementById('sign-in-form').style.display = 'block';\r\n        }\r\n      }\r\n    \r\n      /**\r\n       * Updates the state of the Verify code form.\r\n       */\r\n      function updateVerificationCodeFormUI() {\r\n        if (!serviceAuth.currentUser && window.confirmationResult) {\r\n          document.getElementById('verification-code-form').style.display = 'block';\r\n        } else {\r\n          document.getElementById('verification-code-form').style.display = 'none';\r\n        }\r\n      }\r\n    \r\n      /**\r\n       * Updates the state of the Sign out button.\r\n       */\r\n      function updateSignOutButtonUI() {\r\n        if (serviceAuth.currentUser) {\r\n          document.getElementById('sign-out-button').style.display = 'block';\r\n        } else {\r\n          document.getElementById('sign-out-button').style.display = 'none';\r\n        }\r\n      }\r\n    \r\n     \r\n    \r\n\r\n    useEffect(\r\n     () => {\r\n        updateSignInButtonUI();\r\n        updateSignInFormUI();\r\n        updateSignOutButtonUI();\r\n        updateVerificationCodeFormUI();\r\n\r\n        document.getElementById('sign-in-form').addEventListener('submit', onSignInSubmit);\r\n        document.getElementById('sign-out-button').addEventListener('click', onSignOutClick);\r\n        document.getElementById('phone-number').addEventListener('keyup', updateSignInButtonUI);\r\n        document.getElementById('phone-number').addEventListener('change', updateSignInButtonUI);\r\n        document.getElementById('verification-code').addEventListener('keyup', updateVerifyCodeButtonUI);\r\n        document.getElementById('verification-code').addEventListener('change', updateVerifyCodeButtonUI);\r\n        document.getElementById('verification-code-form').addEventListener('submit', onVerifyCodeSubmit);\r\n        document.getElementById('cancel-verify-code-button').addEventListener('click', cancelVerification);\r\n\r\n        window.recaptchaVerifier = new firebaseInstance.RecaptchaVerifier('recaptcha-container', {\r\n            'size': 'invisible',\r\n            'callback': function(response) {\r\n           \r\n              updateSignInButtonUI();\r\n            },\r\n            'expired-callback': function() {\r\n          \r\n              updateSignInButtonUI();\r\n            }\r\n          });\r\n\r\n          window.recaptchaVerifier.render().then(function(widgetId) {\r\n            window.recaptchaWidgetId = widgetId;\r\n          });\r\n\r\n     }, []\r\n    );\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          휴대폰 인증\r\n        </Typography>\r\n        <form className={classes.form} id=\"sign-in-form\" action=\"#\">\r\n          <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\r\n            <input class=\"mdl-textfield__input\" type=\"text\" placeholder=\"(ex) +82 01012345678\" pattern=\"\\+[0-9\\s\\-\\(\\)]+\" id=\"phone-number\" />\r\n            <span class=\"mdl-textfield__error\">Input is not an international phone number!</span>\r\n          </div>\r\n          <div id=\"recaptcha-container\"></div>\r\n          <input type=\"submit\" disabled class=\"mdl-button mdl-js-button mdl-button--raised\" id=\"sign-in-button\" value=\"Sign-in\"/>\r\n        </form>\r\n      \r\n        <button class=\"mdl-button mdl-js-button mdl-button--raised\" id=\"sign-out-button\">Sign-out</button>\r\n\r\n        <form id=\"verification-code-form\" action=\"#\">\r\n                  <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\r\n                    <input class=\"mdl-textfield__input\" type=\"text\" id=\"verification-code\" placeholder=\"코드입력\" />\r\n                    {/* <input class=\"mdl-textfield__input\" type=\"text\" placeholder=\"이름\" id=\"user-name\" value={userName} onChange={changeName} /> */}\r\n                  </div>\r\n                  <input type=\"submit\" class=\"mdl-button mdl-js-button mdl-button--raised\" id=\"verify-code-button\" value=\"Verify Code\"/>\r\n                  <button class=\"mdl-button mdl-js-button mdl-button--raised\" id=\"cancel-verify-code-button\">Cancel</button>\r\n                </form>\r\n\r\n      </div>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default PhoneAuthProvide;","C:\\Users\\user\\sdiary\\src\\router\\Check.js",[],"C:\\Users\\user\\sdiary\\src\\router\\EditProfile.js",["98","99","100","101","102","103","104","105"],"import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n\r\nconst EditProfile = ({userObj,refreshUser}) => {\r\n    const [newsector, setSector] = useState(userObj.sector);\r\n    const [newusername, setUsername] = useState(userObj.username);\r\n    const [newposition, setPosition] = useState(userObj.position);\r\n    const [checkSector, setCheckSector] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n            if(isSectorValid(newsector)){\r\n                setCheckSector(true);\r\n            };   \r\n        }\r\n        ,[]\r\n    );\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(3),\r\n        },\r\n        submit: {\r\n          margin: theme.spacing(3, 0, 2),\r\n        },\r\n      }));\r\n\r\n      const classes = useStyles();\r\n\r\n    const onChange = (event) => {\r\n        const {target : {name, value}} = event;\r\n        if(name === \"sector\") {\r\n            setSector(value);\r\n            if(isSectorValid(value)){\r\n                setCheckSector(true);\r\n            };\r\n        } else if(name ===\"username\") {\r\n            setUsername(value);\r\n        } else if(name ===\"position\") {\r\n            setPosition(value);\r\n    \r\n        }\r\n    }\r\n\r\n    const isSectorValid = (sectorNum) => {\r\n        var pattern = /^[0-9]*$/;\r\n        if(sectorNum === null){\r\n            return 0;\r\n        }\r\n        return sectorNum.search(pattern) !== -1;\r\n    }\r\n\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(checkSector){\r\n            await dbService.doc(`users/${userObj.id}`).update({\r\n                sector:newsector,\r\n                username:newusername,\r\n                position:newposition,\r\n            });\r\n           \r\n        } else {\r\n            alert(\"구역은 숫자만 가능\");\r\n        }\r\n       \r\n        refreshUser();\r\n    }\r\n    \r\n    return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"구역입력 (숫자만)\"\r\n                name=\"sector\"\r\n                value={newsector}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"username\"\r\n                label=\"이름입력\"\r\n                value={newusername}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <FormLabel component=\"legend\">담당업무</FormLabel>\r\n                <RadioGroup row aria-label=\"position\" name=\"position\" value={newposition} >\r\n                  \r\n                    <FormControlLabel\r\n                    value=\"(부)구역장\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"(부)구역장\"\r\n                    labelPlacement=\"start\"\r\n                    onChange={onChange} \r\n                    name=\"position\"\r\n                    required\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                    value=\"구역원\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"구역원\"\r\n                    labelPlacement=\"start\"\r\n                    onChange={onChange} \r\n                    name=\"position\"\r\n                    required\r\n                    />\r\n                </RadioGroup>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            제출\r\n          </Button>\r\n       \r\n        </form>\r\n      \r\n      </div>\r\n    </Container>\r\n        // <>\r\n    //     <form onSubmit={onSubmit}>\r\n    //     <input type=\"text\" placeholder=\"구역입력 (숫자만)\" value={newsector} onChange={onChange} name=\"sector\" required/>\r\n    //     <br />\r\n    //     <input type=\"text\" placeholder=\"이름입력\" value={newusername} onChange={onChange} name=\"username\"  required />\r\n    //     <br />\r\n    //     <span>담당업무: </span>&nbsp;\r\n    //     <label for=\"position1\">(부)구역장</label><input type=\"radio\" value=\"(부)구역장\" id=\"position1\" name=\"position\" onChange={onChange}/>&nbsp;&nbsp;\r\n    //     <label for=\"position2\">구역원</label><input type=\"radio\" value=\"구역원\" id=\"position2\" name=\"position\" onChange={onChange} />\r\n    //     <br />\r\n    //     <input type=\"submit\" value=\"신청\" />\r\n    // </form>\r\n        // </>\r\n    );\r\n}\r\n\r\nexport default EditProfile;","C:\\Users\\user\\sdiary\\src\\router\\Diary.js",["106","107","108"],"import React, { useState } from \"react\";\r\n\r\n\r\n\r\nconst Diary = ({diaryObj}) => {\r\n\r\n    const [text, setText] = useState(diaryObj.text);\r\n\r\n    const fnChkByte = (txt, len, lastTxt) => {\r\n        if (len == \"\" || len == null) { // 기본값\r\n            len = 20;\r\n        }\r\n\r\n        if (lastTxt == \"\" || lastTxt == null) { // 기본값\r\n            lastTxt = \"...\";\r\n        }\r\n        if (txt.length > len) {\r\n            txt = txt.substr(0, len) + lastTxt;\r\n        }\r\n        return (txt);       \r\n    }\r\n\r\n    return (\r\n        <>\r\n           <h4>{fnChkByte(text,100)}</h4>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Diary;","C:\\Users\\user\\sdiary\\src\\components\\DiaryFactory.js",[],"C:\\Users\\user\\sdiary\\src\\components\\DetailDiary.js",["109"],"import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst DetailDiary = ({match}) => {\r\n    \r\n    const {params : {id}} = match;\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const getDiary = async () => {\r\n        const diary = await dbService.doc(`diarys/${id}`).get();\r\n        return diary;\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            getDiary().then((result) => {\r\n                setText(result.data().text);\r\n            });\r\n        }\r\n    , []);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {text}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailDiary;",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":17},{"ruleId":"114","severity":1,"message":"118","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":12},{"ruleId":"114","severity":1,"message":"119","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":18},{"ruleId":"114","severity":1,"message":"120","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":14},{"ruleId":"114","severity":1,"message":"121","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":18},{"ruleId":"114","severity":1,"message":"122","line":12,"column":8,"nodeType":"116","messageId":"117","endLine":12,"endColumn":19},{"ruleId":"114","severity":1,"message":"123","line":14,"column":8,"nodeType":"116","messageId":"117","endLine":14,"endColumn":15},{"ruleId":"114","severity":1,"message":"124","line":15,"column":8,"nodeType":"116","messageId":"117","endLine":15,"endColumn":18},{"ruleId":"114","severity":1,"message":"125","line":18,"column":8,"nodeType":"116","messageId":"117","endLine":18,"endColumn":12},{"ruleId":"114","severity":1,"message":"126","line":19,"column":8,"nodeType":"116","messageId":"117","endLine":19,"endColumn":19},{"ruleId":"114","severity":1,"message":"127","line":2,"column":24,"nodeType":"116","messageId":"117","endLine":2,"endColumn":30},{"ruleId":"114","severity":1,"message":"128","line":2,"column":32,"nodeType":"116","messageId":"117","endLine":2,"endColumn":40},{"ruleId":"114","severity":1,"message":"129","line":2,"column":42,"nodeType":"116","messageId":"117","endLine":2,"endColumn":47},{"ruleId":"114","severity":1,"message":"130","line":2,"column":49,"nodeType":"116","messageId":"117","endLine":2,"endColumn":55},{"ruleId":"114","severity":1,"message":"125","line":2,"column":56,"nodeType":"116","messageId":"117","endLine":2,"endColumn":60},{"ruleId":"114","severity":1,"message":"131","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":11},{"ruleId":"114","severity":1,"message":"132","line":14,"column":8,"nodeType":"116","messageId":"117","endLine":14,"endColumn":13},{"ruleId":"114","severity":1,"message":"133","line":16,"column":8,"nodeType":"116","messageId":"117","endLine":16,"endColumn":12},{"ruleId":"114","severity":1,"message":"134","line":17,"column":8,"nodeType":"116","messageId":"117","endLine":17,"endColumn":13},{"ruleId":"114","severity":1,"message":"135","line":21,"column":8,"nodeType":"116","messageId":"117","endLine":21,"endColumn":25},{"ruleId":"114","severity":1,"message":"136","line":117,"column":13,"nodeType":"116","messageId":"117","endLine":117,"endColumn":29},{"ruleId":"114","severity":1,"message":"137","line":2,"column":13,"nodeType":"116","messageId":"117","endLine":2,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":128,"column":35,"nodeType":"140","messageId":"141","endLine":128,"endColumn":36,"suggestions":"142"},{"ruleId":"138","severity":1,"message":"143","line":128,"column":37,"nodeType":"140","messageId":"141","endLine":128,"endColumn":38,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":219,"column":9,"nodeType":"147","endLine":219,"endColumn":11,"suggestions":"148"},{"ruleId":"114","severity":1,"message":"149","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"150","line":8,"column":8,"nodeType":"116","messageId":"117","endLine":8,"endColumn":16},{"ruleId":"114","severity":1,"message":"125","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":12},{"ruleId":"114","severity":1,"message":"131","line":11,"column":8,"nodeType":"116","messageId":"117","endLine":11,"endColumn":11},{"ruleId":"114","severity":1,"message":"151","line":12,"column":8,"nodeType":"116","messageId":"117","endLine":12,"endColumn":24},{"ruleId":"114","severity":1,"message":"124","line":13,"column":8,"nodeType":"116","messageId":"117","endLine":13,"endColumn":18},{"ruleId":"114","severity":1,"message":"152","line":16,"column":8,"nodeType":"116","messageId":"117","endLine":16,"endColumn":19},{"ruleId":"145","severity":1,"message":"153","line":33,"column":10,"nodeType":"147","endLine":33,"endColumn":12,"suggestions":"154"},{"ruleId":"114","severity":1,"message":"155","line":7,"column":18,"nodeType":"116","messageId":"117","endLine":7,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":10,"column":17,"nodeType":"158","messageId":"159","endLine":10,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":14,"column":21,"nodeType":"158","messageId":"159","endLine":14,"endColumn":23},{"ruleId":"145","severity":1,"message":"160","line":20,"column":7,"nodeType":"147","endLine":20,"endColumn":9,"suggestions":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'AppRouter' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'Navigation' is defined but never used.","'AppBar' is defined but never used.","'CameraIcon' is defined but never used.","'CssBaseline' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'detailDiary' is defined but never used.","'Router' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Box' is defined but never used.","'Badge' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'NotificationsIcon' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'firebaseui' is defined but never used.","no-useless-escape","Unnecessary escape character: \\(.","Literal","unnecessaryEscape",["164","165"],"Unnecessary escape character: \\).",["166","167"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cancelVerification', 'onSignInSubmit', 'onVerifyCodeSubmit', 'updateSignInButtonUI', and 'updateVerifyCodeButtonUI'. Either include them or remove the dependency array.","ArrayExpression",["168"],"'Avatar' is defined but never used.","'Checkbox' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has a missing dependency: 'newsector'. Either include it or remove the dependency array.",["169"],"'setText' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getDiary'. Either include it or remove the dependency array.",["170"],"no-global-assign","no-unsafe-negation",{"messageId":"171","fix":"172","desc":"173"},{"messageId":"174","fix":"175","desc":"176"},{"messageId":"171","fix":"177","desc":"173"},{"messageId":"174","fix":"178","desc":"176"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"removeEscape",{"range":"185","text":"186"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"187","text":"188"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"189","text":"186"},{"range":"190","text":"188"},"Update the dependencies array to be: [cancelVerification, onSignInSubmit, onVerifyCodeSubmit, updateSignInButtonUI, updateVerifyCodeButtonUI]",{"range":"191","text":"192"},"Update the dependencies array to be: [newsector]",{"range":"193","text":"194"},"Update the dependencies array to be: [getDiary]",{"range":"195","text":"196"},[4542,4543],"",[4542,4542],"\\",[4544,4545],[4544,4544],[7948,7950],"[cancelVerification, onSignInSubmit, onVerifyCodeSubmit, updateSignInButtonUI, updateVerifyCodeButtonUI]",[1458,1460],"[newsector]",[504,506],"[getDiary]"]